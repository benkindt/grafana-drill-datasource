{"version":3,"sources":["../src/datasource.js"],"names":["_","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","m","exec","split","connection","name","q","sql","from","to","limit","interval","console","log","timedsql","replace","options","isNumeric","input","test","timeFunction","toTimestamp","date","isnum","Number","Date","parse","query","buildQueryParameters","targets","filter","t","hide","isTableQuery","length","when","data","loadData","target","range","valueOf","then","results","columns","map","v","index","text","rows","datapoints","array","forEach","el","val","parseInt","toLocaleString","parseFloat","push","value","timestamp","datasourceRequest","buildDrillRequest","method","result","status","message","title","catch","annotationQuery","assignIn","annotation","opsAsString","headers","mapToTextValue","lf","d","i","Math","round","maxDataPoints","buckets","self","response","Promise","resolve","clonedOptions","cloneDeep","scopedVars"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url || \"\";\n    var m = /con\\=(.*)/.exec(this.url.split(\"?\")[1]);\n    this.connection = m ? m[1]: null;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n  }\n\n  buildDrillRequest(sql, from, to, limit, interval){\n\t  console.log(\"---log buildDrillRequest---\");\n\t  // replace $from and $to in query string\n\t  console.log(from);\n\t  var timedsql = sql.replace(\"'$from'\", from - 3600000).replace(\"'$to'\", to + 3600000);\n//\t  console.log(timedsql);\n\t  if(sql === 'undefined'){\n\t\t  return { // return some random example query\n          \t\"queryType\" : \"SQL\", \n          \t\"query\" : \"SELECT salary as `value`, hire_date as `timestamp` FROM cp.`employee.json`\"\n          };\n\t  }\n\t  return { \n    \t\"queryType\" : \"SQL\", \n    \t\"query\" : timedsql\n\t  };\n  }\n\n  query(options) {\n  \t\tvar isNumeric = function(input){\n          return /^\\d+$/.test(input);\n        }\n        var timeFunction = function toTimestamp(date){\n  \t\t   if(typeof(date) === \"number\"){\n  \t\t\t  return date;\n  \t\t   } else if (typeof(date) === \"string\"){\n  \t\t\t  var isnum = isNumeric(date);\n  \t\t\t  if(isnum){ // convert date to number datatype\n  \t\t\t\t return Number(date);\n  \t\t\t  } else { // parse date from string format to number datatype\n  \t\t\t\t return Date.parse(date);\n  \t\t\t  }\n  \t\t   } else {\n  \t\t\t  console.log(\"No 'timestamp' column or wrong datatype, expects date string or epoch in ms.\");\n  \t\t   }\n \t\t}\n//\t    console.log(\"---log query ... test---\");\n//\t    console.log(options);\n\t    var query = this.buildQueryParameters(options);\n       \n//       console.log(query.targets);\n       \n       query.targets = query.targets.filter(function (t) {\n       \tif((typeof t.hide) === 'undefined'){\n       \t\tt.hide = false;\n       \t}\n           return !t.hide;\n       });\n       \n       var isTableQuery = false;\n       if (query.targets[0].type === 'table'){\n//       \tconsole.log(\"is Table Query\");\n       \tisTableQuery = true;\n       }\n       \n       if (query.targets.length <= 0) {\n       \tconsole.log(\"query.targets.length <= 0 ... is \" + query.targets.length);\n       \treturn this.q.when({ data: [] });\n       }\n       \n       return this.loadData(query.targets[0].target, options.range.from.valueOf(), options.range.to.valueOf())\n       .then(function (results) {\n//\t\t    console.log(\"---loadDate .then---\");\n\t\t    console.log(results);\n\t\t\tif(results.data.columns.length === 0){\n\t\t\t\tconsole.log(\"Query returned no data.\");\n\t\t\t\treturn { data: [] };\n\t\t\t}\n\t\t\t\n\t\t\tvar data;\n\t\t\tif(isTableQuery){\n\t\t\t\tconsole.log(\"Transform drill result for Table Query\");\n\t\t\t\tvar columns = results.data.columns.map(function (v, index) {\n\t\t\t\t\tif(v === \"timestamp\"){\n\t\t\t\t\t\tconsole.log(\"Found timestamp column.\");\n\t\t\t\t\t\treturn { text: v, type: \"time\", \"sort\": true, \"desc\": true };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(isNumeric(results.data.rows[0][v])){\n\t\t\t\t\t\t\tconsole.log(index + \" is Number \" + v);\n\t\t\t\t\t\t\treturn { text: v, type: \"Number\" };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(index + \" is String \" + v);\n\t\t\t\t\t\t\treturn { text: v, type: \"String\" };\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tvar datapoints = results.data.rows.map(function (v) {\n\t\t\t\t  var array = [];\n\t\t\t\t  columns.forEach(function(el) {\n\t\t\t\t\t  var val;\n\t\t\t\t\t  if(isNumeric(v[el.text])){\n\t\t\t\t\t\t  if(el.text === \"timestamp\"){\n\t\t\t\t\t\t\t  var date = new Date(parseInt(v[el.text]));\n//\t\t\t\t\t\t\t  val = v[el.text];\n\t\t\t\t\t\t\t  val = date.toLocaleString();\n\t\t\t\t\t\t  } else {\n\t\t\t\t\t\t\t  val = Number.parseFloat(v[el.text]);\n\t\t\t\t\t\t  }\n\t\t\t\t\t  } else {\n\t\t\t\t\t\t  val = v[el.text];\n\t\t\t\t\t  }\n\t\t\t\t\t  array.push(val);\n\t\t\t\t  });\n\t\t\t\t  return array;\n\t\t\t\t});\n\t\t\t\t// maybe allow setting target name by input field?\n\t\t\t\tdata = [  { columns: columns, rows: datapoints, type: \"table\" } ];\n\t\t\t} else { // else is timeseries\n\t\t\t\tconsole.log(\"Transform drill result for Timeseries Query\");\n\t\t\t\tvar datapoints = results.data.rows.map(function (v) {\n\t\t\t\t  var val;\n\t\t\t\t  if(isNumeric(v.value)){\n\t\t\t\t\t  val = Number.parseInt(v.value);\n\t\t\t\t  } else {\n\t\t\t\t\t  val = v.value;\n\t\t\t\t  }\n\t\t\t\t  return [val, timeFunction(v.timestamp)];\n\t\t\t\t});\n\t\t\t\t// maybe allow setting target name by input field?\n\t\t\t\tdata = [  { target: query.targets[0].target, datapoints: datapoints } ];\n\t\t\t}\n\t\t\tconsole.log(data);\n\t\t\treturn { data: data };\n       });\n  }\n\n  testDatasource() {\n\t  return this.backendSrv.datasourceRequest({\n          url: this.url + \"/query.json\",\n          data: this.buildDrillRequest(\"SELECT * FROM cp.`employee.json` LIMIT 10\"),\n          method: 'POST'\n        }).then(function (result) {\n        \tconsole.log(result);\n          return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n        }).catch(function (result) {\n        \tconsole.log(result);\n          return { status: \"error\", message: result, title: \"Error\" };\n        });\n  }\n\n  annotationQuery(options) {\n    var annotationQuery = _.assignIn({}, options);\n    annotationQuery.annotation.query = this.templateSrv.replace(options.annotation.query, {}, 'glob'); \n    \n    return this.backendSrv.datasourceRequest({\n      url: this.url,\n      method: 'POST',\n      data: this.buildDrillRequest(\"annotations\", annotationQuery)\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindQuery(options) {\n\t  var opsAsString = typeof options === \"string\";\n      if (options && options.type == 'sql')\n        // TODO: Parser?\n        return this.q.when([]);\n      var target = opsAsString ? options : options.target;\n      return this.backendSrv.datasourceRequest({\n          url: this.url + \"/query.json\",\n          data: this.buildDrillRequest(target),\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' }\n      }).then(this.mapToTextValue);\n  }\n\n  mapToTextValue(result) {\n//\tconsole.log(result);\n//\tconsole.log(result.data.rows);\n  \tvar lf = result.data.columns[0];\n      return _.map(result.data.rows, function (d, i) {\n\t\t\treturn { text: d[lf], value: d[lf] };\n      });\n  }\n  \n  loadData(sql, from, to) {\n//      console.log(\"---loadData---\");\n      var interval = Math.round((to - from) / this.maxDataPoints);\n      var limit = this.maxDataPoints / this.buckets;\n      var self = this;\n      return this.backendSrv.datasourceRequest({\n        url: this.url + \"/query.json\",\n        data: this.buildDrillRequest(sql, from, to, limit, interval),\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n      }).then(function (response) {\n        if (response.status === 200) {\n          if (!response.data) {\n            console.log(\"Oops! No response data?!\");\n            console.log(response);\n          }\n          return Promise.resolve( response );\n        }\n      });\n    }\n\n  buildQueryParameters(options) {\n    var clonedOptions = _.cloneDeep(options);\n    var targets = _.filter(clonedOptions.targets, target => \n      target.target !== 'select metric' && !target.hide);\n\n    targets = _.map(targets, target => \n      _.assignIn(target, { target: this.templateSrv.replace(target.target, options.scopedVars, \"distributed\")}));\n\n    clonedOptions.targets = targets;\n\n    return clonedOptions;\n  }\n}\n"]}